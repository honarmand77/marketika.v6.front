{"version":3,"file":"static/js/545.cb10fd5a.chunk.js","mappings":"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","sources":["api/admin.js","pages/AdminDashboard/ManagementPage/AddAdmin.jsx","pages/AdminDashboard/ManagementPage/AddProduct.jsx","pages/AdminDashboard/ManagementPage/AddCategory.jsx","pages/AdminDashboard/ManagementPage/AddSubCategory.jsx","pages/AdminDashboard/ManagementPage/AddBanner.jsx","pages/AdminDashboard/ManagementPage/ManagementPage.jsx","components/Swiper/Swipers.jsx"],"sourcesContent":["import api from \"./index\";\r\n\r\nexport const addAdmin = async (adminData) => {\r\n  try {\r\n    const response = await api.post(\"admin/add\", adminData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error adding admin:\", error);\r\n    throw error;\r\n  }\r\n};","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  InputAdornment,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\r\nimport AlternateEmailIcon from \"@mui/icons-material/AlternateEmail\";\r\nimport KeyboardCommandKeyIcon from \"@mui/icons-material/KeyboardCommandKey\";\r\nimport { addAdmin } from \"../../../api/admin\"; // import the addAdmin function\r\n\r\nexport function AddAdmin() {\r\n  const [adminName, setAdminName] = useState(\"\");\r\n  const [adminEmail, setAdminEmail] = useState(\"\");\r\n  const [adminRole, setAdminRole] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleAddAdmin = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const adminData = {\r\n        name: adminName,\r\n        email: adminEmail,\r\n        role: adminRole,\r\n      };\r\n\r\n      await addAdmin(adminData); // استفاده از تابع addAdmin از فایل api\r\n\r\n      alert(\"ادمین با موفقیت اضافه شد!\");\r\n      resetForm([setAdminName, setAdminEmail, setAdminRole]);\r\n    } catch (error) {\r\n      console.error(\"خطا در افزودن ادمین:\", error);\r\n      setError(\"خطایی رخ داد!\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = (setters) => {\r\n    setters.forEach((setter) => setter(\"\"));\r\n  };\r\n\r\n  return (\r\n    <Card sx={{background:\"transparent\", borderRadius: '8px'}}>\r\n      <CardHeader\r\n        title={\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ color: \"#ffa05c\", fontWeight: \"bold\" }}>\r\n            👤 افزودن ادمین جدید\r\n          </Typography>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              backgroundColor: \"#ffa05c\",\r\n              \"&:hover\": { backgroundColor: \"#e68a4a\" }, // تغییر رنگ هنگام هاور\r\n              color: \"#fff\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n            onClick={handleAddAdmin}\r\n            disabled={loading}\r\n          >\r\n            {loading ? <CircularProgress size={24} sx={{ color: \"#fff\" }} /> : \"افزودن ادمین\"}\r\n          </Button>\r\n        }\r\n      />\r\n      <CardContent>\r\n        <form onSubmit={handleAddAdmin}>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n            <TextField\r\n              id=\"admin-Name\"\r\n              label=\"نام ادمین جدید\"\r\n              placeholder=\"نام ادمین جدید\"\r\n              value={adminName}\r\n              onChange={(e) => setAdminName(e.target.value)}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <DriveFileRenameOutlineIcon sx={{ color: \"#ffa05c\" }} /> {/* تغییر رنگ آیکون */}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  \"& fieldset\": { borderColor: \"#ffa05c\" },\r\n                  \"&:hover fieldset\": { borderColor: \"#e68a4a\" },\r\n                },\r\n              }}\r\n            />\r\n            <TextField\r\n              id=\"admin-Email\"\r\n              label=\"ایمیل ادمین جدید\"\r\n              placeholder=\"ایمیل ادمین جدید\"\r\n              type=\"email\"\r\n              value={adminEmail}\r\n              onChange={(e) => setAdminEmail(e.target.value)}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <AlternateEmailIcon sx={{ color: \"#ffa05c\" }} /> {/* تغییر رنگ آیکون */}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  \"& fieldset\": { borderColor: \"#ffa05c\" },\r\n                  \"&:hover fieldset\": { borderColor: \"#e68a4a\" },\r\n                },\r\n              }}\r\n            />\r\n            <TextField\r\n              id=\"admin-Role\"\r\n              label=\"نقش ادمین جدید\"\r\n              placeholder=\"نقش ادمین جدید\"\r\n              value={adminRole}\r\n              onChange={(e) => setAdminRole(e.target.value)}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <KeyboardCommandKeyIcon sx={{ color: \"#ffa05c\" }} /> {/* تغییر رنگ آیکون */}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n              sx={{\r\n                \"& .MuiOutlinedInput-root\": {\r\n                  \"& fieldset\": { borderColor: \"#ffa05c\" },\r\n                  \"&:hover fieldset\": { borderColor: \"#e68a4a\" },\r\n                },\r\n              }}\r\n            />\r\n            {error && (\r\n              <Typography variant=\"body2\" sx={{ color: \"red\", textAlign: \"center\" }}>\r\n                {error}\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  InputAdornment,\r\n  CircularProgress,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@mui/material\";\r\nimport DriveFileRenameOutlineIcon from \"@mui/icons-material/DriveFileRenameOutline\";\r\nimport RequestQuoteIcon from \"@mui/icons-material/RequestQuote\";\r\nimport ShowChartIcon from \"@mui/icons-material/ShowChart\";\r\nimport FormatAlignRightIcon from \"@mui/icons-material/FormatAlignRight\";\r\nimport CollectionsIcon from \"@mui/icons-material/Collections\";\r\nimport Cookies from \"js-cookie\";\r\nimport { categoryData } from \"../../../api/categories\"; // import the functions\r\nimport {addProduct} from \"../../../api/products\";\r\nexport function AddProduct() {\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  const [productStock, setProductStock] = useState(\"\");\r\n  const [productImage, setProductImage] = useState(null);\r\n  const [productCategory, setProductCategory] = useState(\"\");\r\n  const [productSubCategory, setProductSubCategory] = useState(\"\");\r\n  const [productDescription, setProductDescription] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const token = Cookies.get(\"authToken\");\r\n\r\n  useEffect(() => {\r\n    const getCategories = async () => {\r\n      try {\r\n        const data = await categoryData(); // استفاده از تابع categoryData از فایل api\r\n        setCategories(data);\r\n      } catch (error) {\r\n        console.error(\"خطا در دریافت دسته‌بندی‌ها:\", error);\r\n        setError(\"خطا در دریافت دسته‌بندی‌ها.\");\r\n      }\r\n    };\r\n    getCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (productCategory) {\r\n      const selectedCategory = categories.find((cat) => cat._id === productCategory);\r\n      if (selectedCategory) {\r\n        setSubCategories(selectedCategory.subCategories || []);\r\n      } else {\r\n        setSubCategories([]);\r\n      }\r\n    } else {\r\n      setSubCategories([]);\r\n    }\r\n  }, [productCategory, categories]);\r\n\r\n  const handleAddProduct = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    if (!productCategory || !productImage || !token || !productSubCategory) {\r\n      setError(\"لطفاً تمام فیلدها را پر کنید.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"name\", productName);\r\n      formData.append(\"price\", productPrice);\r\n      formData.append(\"stock\", productStock);\r\n      formData.append(\"category\", productCategory);\r\n      formData.append(\"subCategory\", productSubCategory);\r\n      formData.append(\"description\", productDescription);\r\n      formData.append(\"image\", productImage);\r\n\r\n      await addProduct(formData); // استفاده از تابع addProduct از فایل api\r\n\r\n      alert(\"محصول با موفقیت اضافه شد!\");\r\n      resetForm([setProductName, setProductPrice, setProductStock, setProductCategory, setProductDescription, setProductSubCategory]);\r\n      setProductImage(null);\r\n    } catch (error) {\r\n      console.error(\"خطا در افزودن محصول:\", error);\r\n      setError(\"خطا در افزودن محصول.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = (setters) => {\r\n    setters.forEach((setter) => setter(\"\"));\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ background:\"transparent\",borderRadius: '8px' }}> {/* تغییر رنگ پس‌زمینه کارت */}\r\n      <CardHeader\r\n        title={\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ color: \"#ffa05c\" }}>\r\n            🛒 افزودن محصول جدید\r\n          </Typography>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              backgroundColor: \"#ffa05c\",\r\n              \"&:hover\": { backgroundColor: \"#e68a4a\" }, // تغییر رنگ هنگام هاور\r\n            }}\r\n            onClick={handleAddProduct}\r\n            disabled={loading}\r\n          >\r\n            {loading ? <CircularProgress size={24} sx={{ color: \"#fff\" }} /> : \"افزودن محصول\"}\r\n          </Button>\r\n        }\r\n      />\r\n      <CardContent>\r\n        <form onSubmit={handleAddProduct} encType=\"multipart/form-data\">\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n            <TextField\r\n              id=\"product-name\"\r\n              label=\"نام محصول\"\r\n              placeholder=\"نام محصول جدید\"\r\n              value={productName}\r\n              onChange={(e) => setProductName(e.target.value)}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <DriveFileRenameOutlineIcon sx={{ color: \"#ffa05c\" }} /> {/* تغییر رنگ آیکون */}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"product-price\"\r\n              label=\"قیمت محصول\"\r\n              placeholder=\"قیمت محصول\"\r\n              type=\"number\"\r\n              value={productPrice}\r\n              onChange={(e) => setProductPrice(e.target.value)}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <RequestQuoteIcon sx={{ color: \"#ffa05c\" }} /> {/* تغییر رنگ آیکون */}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"product-stock\"\r\n              label=\"موجودی محصول\"\r\n              placeholder=\"تعداد موجودی\"\r\n              type=\"number\"\r\n              value={productStock}\r\n              onChange={(e) => setProductStock(e.target.value)}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <ShowChartIcon sx={{ color: \"#ffa05c\" }} /> {/* تغییر رنگ آیکون */}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n            />\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"product-category-label\">دسته‌بندی محصول</InputLabel>\r\n              <Select\r\n                labelId=\"product-category-label\"\r\n                id=\"product-category\"\r\n                value={productCategory}\r\n                onChange={(e) => setProductCategory(e.target.value)}\r\n                label=\"دسته‌بندی محصول\"\r\n                required\r\n              >\r\n                <MenuItem value=\"\">انتخاب دسته‌بندی</MenuItem>\r\n                {categories.map((category) => (\r\n                  <MenuItem key={category._id} value={category._id}>\r\n                    {category.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"product-sub-category-label\">ساب کتگوری محصول</InputLabel>\r\n              <Select\r\n                labelId=\"product-sub-category-label\"\r\n                id=\"product-sub-category\"\r\n                value={productSubCategory}\r\n                onChange={(e) => setProductSubCategory(e.target.value)}\r\n                label=\"ساب کتگوری محصول\"\r\n                required\r\n              >\r\n                <MenuItem value=\"\">انتخاب ساب کتگوری</MenuItem>\r\n                {subCategories.map((subCategory) => (\r\n                  <MenuItem key={subCategory._id} value={subCategory._id}>\r\n                    {subCategory.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              id=\"product-information\"\r\n              label=\"اطلاعات محصول\"\r\n              placeholder=\"اطلاعات محصول\"\r\n              value={productDescription}\r\n              onChange={(e) => setProductDescription(e.target.value)}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <FormatAlignRightIcon sx={{ color: \"#ffa05c\" }} /> {/* تغییر رنگ آیکون */}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"product-image\"\r\n              label=\"تصویر محصول\"\r\n              type=\"file\"\r\n              onChange={(e) => setProductImage(e.target.files[0])}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <CollectionsIcon sx={{ color: \"#ffa05c\" }} /> {/* تغییر رنگ آیکون */}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n            />\r\n            {error && (\r\n              <Typography variant=\"body2\" sx={{ color: \"red\" }}>\r\n                {error}\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  InputAdornment,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport DriveFileRenameOutlineIcon from \"@mui/icons-material/DriveFileRenameOutline\";\r\nimport FormatAlignRightIcon from \"@mui/icons-material/FormatAlignRight\";\r\nimport CollectionsIcon from \"@mui/icons-material/Collections\";\r\nimport Cookies from \"js-cookie\";\r\nimport { addCategory } from \"../../../api/categories\";\r\nexport function AddCategory() {\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [categoryDescription, setCategoryDescription] = useState(\"\");\r\n  const [categoryImage, setCategoryImage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const token = Cookies.get(\"authToken\");\r\n\r\n  const handleAddCategory = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"name\", categoryName);\r\n      formData.append(\"description\", categoryDescription);\r\n      formData.append(\"image\", categoryImage);\r\n\r\n\r\n\r\n      // Make sure the endpoint matches your backend route\r\n      await addCategory(formData);\r\n\r\n      alert(\"دسته‌بندی با موفقیت اضافه شد!\");\r\n      resetForm([setCategoryName, setCategoryDescription]);\r\n      setCategoryImage(null);\r\n    } catch (error) {\r\n      console.error(\"خطا در افزودن دسته‌بندی:\", error);\r\n      setError(\"آدرس API یافت نشد. لطفا از صحت آدرس اطمینان حاصل کنید\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = (setters) => {\r\n    setters.forEach((setter) => setter(\"\"));\r\n  };\r\n\r\n  return (\r\n    <Card sx={{background:\"transparent\", borderRadius: '8px'}}>\r\n      <CardHeader\r\n        title={\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ color: \"#ffa05c\" }}>\r\n            📂 افزودن دسته‌بندی جدید\r\n          </Typography>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              backgroundColor: \"#ffa05c\",\r\n              \"&:hover\": { backgroundColor: \"#e68a4a\" },\r\n            }}\r\n            onClick={handleAddCategory}\r\n            disabled={loading}\r\n          >\r\n            {loading ? <CircularProgress size={24} sx={{ color: \"#fff\" }} /> : \"افزودن دسته‌بندی\"}\r\n          </Button>\r\n        }\r\n      />\r\n      <CardContent>\r\n        <form onSubmit={handleAddCategory} encType=\"multipart/form-data\">\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n            <TextField\r\n              id=\"category-Name\"\r\n              label=\"نام دسته‌بندی\"\r\n              placeholder=\"نام دسته‌بندی\"\r\n              value={categoryName}\r\n              onChange={(e) => setCategoryName(e.target.value)}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <DriveFileRenameOutlineIcon sx={{ color: \"#ffa05c\" }} />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"category-Description\"\r\n              label=\"توضیحات دسته‌بندی\"\r\n              placeholder=\"توضیحات دسته‌بندی\"\r\n              value={categoryDescription}\r\n              onChange={(e) => setCategoryDescription(e.target.value)}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <FormatAlignRightIcon sx={{ color: \"#ffa05c\" }} />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"category-Image\"\r\n              label=\"تصویر دسته‌بندی\"\r\n              type=\"file\"\r\n              onChange={(e) => setCategoryImage(e.target.files[0])}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <CollectionsIcon sx={{ color: \"#ffa05c\" }} />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n            />\r\n            {error && (\r\n              <Typography variant=\"body2\" sx={{ color: \"red\" }}>\r\n                {error}\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  InputAdornment,\r\n  CircularProgress,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@mui/material\";\r\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\r\nimport FormatAlignRightIcon from \"@mui/icons-material/FormatAlignRight\";\r\nimport Cookies from \"js-cookie\";\r\nimport { addSubCategory } from \"../../../api/subcategories\"; // import the functions\r\nimport { categoryData } from \"../../../api/categories\"; // import the functions\r\nimport CollectionsIcon from \"@mui/icons-material/Collections\";\r\n\r\n\r\nexport function AddSubCategory() {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const token = Cookies.get(\"authToken\");\r\n  \r\n  useEffect(() => {\r\n    const getCategories = async () => {\r\n      try {\r\n        const data = await categoryData();\r\n        setCategories(data);\r\n      } catch (error) {\r\n        console.error(\"خطا در دریافت کتگوری‌ها:\", error);\r\n        setError(\"خطا در دریافت کتگوری‌ها.\");\r\n      }\r\n    };\r\n    getCategories();\r\n  }, [token]);\r\n\r\n  const handleAddSubCategory = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    if (!name || !selectedCategory || !token) {\r\n      setError(\"لطفاً تمام فیلدها را پر کنید.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"name\", name);\r\n      formData.append(\"description\", description);\r\n      formData.append(\"categoryId\", selectedCategory);\r\n      console.log(selectedCategory)\r\n      await addSubCategory(formData); // استفاده از تابع addSubCategory از فایل api\r\n\r\n      alert(\"ساب‌کتگوری با موفقیت اضافه شد!\");\r\n      resetForm([setName, setDescription, setSelectedCategory]);\r\n    } catch (error) {\r\n      console.error(\"خطا در افزودن ساب‌کتگوری:\", error);\r\n      setError(\"خطایی رخ داد!\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = (setters) => {\r\n    setters.forEach((setter) => setter(\"\"));\r\n  };\r\n\r\n  return (\r\n    <Card sx={{background:\"transparent\", borderRadius: '8px' }}> {/* تغییر رنگ پس‌زمینه کارت */}\r\n      <CardHeader\r\n        title={\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ color: \"#ffa05c\" }}>\r\n            📂 افزودن ساب‌کتگوری جدید\r\n          </Typography>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              backgroundColor: \"#ffa05c\",\r\n              \"&:hover\": { backgroundColor: \"#e68a4a\" }, // تغییر رنگ هنگام هاور\r\n            }}\r\n            onClick={handleAddSubCategory}\r\n            disabled={loading}\r\n          >\r\n            {loading ? <CircularProgress size={24} sx={{ color: \"#fff\" }} /> : \"افزودن ساب‌کتگوری\"}\r\n          </Button>\r\n        }\r\n      />\r\n      <CardContent>\r\n        <form onSubmit={handleAddSubCategory} encType=\"multipart/form-data\">\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"parent-category-label\">کتگوری اصلی</InputLabel>\r\n              <Select\r\n                labelId=\"parent-category-label\"\r\n                id=\"parent-category\"\r\n                value={selectedCategory}\r\n                onChange={(e) => setSelectedCategory(e.target.value)}\r\n                label=\"کتگوری اصلی\"\r\n                required\r\n              >\r\n                <MenuItem value=\"\">انتخاب کتگوری اصلی</MenuItem>\r\n                {categories.map((category) => (\r\n                  <MenuItem key={category._id} value={category._id}>\r\n                    {category.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              id=\"SubCategory-name\"\r\n              label=\"نام ساب‌کتگوری\"\r\n              placeholder=\"نام ساب‌کتگوری\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <DriveFileRenameOutlineIcon sx={{ color: \"#ffa05c\" }} /> {/* تغییر رنگ آیکون */}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"SubCategory-information\"\r\n              label=\"توضیحات ساب‌کتگوری\"\r\n              placeholder=\"توضیحات ساب‌کتگوری\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <FormatAlignRightIcon sx={{ color: \"#ffa05c\" }} /> {/* تغییر رنگ آیکون */}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n            />\r\n            {error && (\r\n              <Typography variant=\"body2\" sx={{ color: \"red\" }}>\r\n                {error}\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  InputAdornment,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport DriveFileRenameOutlineIcon from \"@mui/icons-material/DriveFileRenameOutline\";\r\nimport FormatAlignRightIcon from \"@mui/icons-material/FormatAlignRight\";\r\nimport CollectionsIcon from \"@mui/icons-material/Collections\";\r\nimport Cookies from \"js-cookie\";\r\nimport { addBanner } from \"../../../api/banners\";\r\n\r\nexport function AddBanner() {\r\n  const [bannerTitle, setBannerTitle] = useState(\"\");\r\n  const [bannerLink, setBannerLink] = useState(\"\");\r\n  const [bannerImage, setBannerImage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const token = Cookies.get(\"authToken\");\r\n\r\n  const handleAddBanner = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", bannerTitle);\r\n      formData.append(\"link\", bannerLink);\r\n      formData.append(\"imageUrl\", bannerImage);\r\n\r\n      await addBanner(formData); // استفاده از تابع addBanner از فایل api\r\n\r\n      alert(\"بنر با موفقیت اضافه شد!\");\r\n      resetForm([setBannerTitle, setBannerLink]);\r\n      setBannerImage(null);\r\n    } catch (error) {\r\n      console.error(\"خطا در افزودن بنر:\", error);\r\n      setError(\"خطایی رخ داد!\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetForm = (setters) => {\r\n    setters.forEach((setter) => setter(\"\"));\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ background:\"transparent\",borderRadius: '8px' }}> {/* تغییر رنگ پس‌زمینه کارت */}\r\n      <CardHeader\r\n        title={\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ color: \"#ffa05c\" }}>\r\n            📢 افزودن بنر جدید\r\n          </Typography>\r\n        }\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              backgroundColor: \"#ffa05c\",\r\n              \"&:hover\": { backgroundColor: \"#e68a4a\" }, // تغییر رنگ هنگام هاور\r\n            }}\r\n            onClick={handleAddBanner}\r\n            disabled={loading}\r\n          >\r\n            {loading ? <CircularProgress size={24} sx={{ color: \"#fff\" }} /> : \"افزودن بنر\"}\r\n          </Button>\r\n        }\r\n      />\r\n      <CardContent>\r\n        <form onSubmit={handleAddBanner} encType=\"multipart/form-data\">\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"16px\" }}>\r\n            <TextField\r\n              id=\"banner-Title\"\r\n              label=\"عنوان بنر\"\r\n              placeholder=\"عنوان بنر\"\r\n              value={bannerTitle}\r\n              onChange={(e) => setBannerTitle(e.target.value)}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <DriveFileRenameOutlineIcon sx={{ color: \"#ffa05c\" }} /> {/* تغییر رنگ آیکون */}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"banner-Link\"\r\n              label=\"لینک بنر\"\r\n              placeholder=\"لینک بنر\"\r\n              value={bannerLink}\r\n              onChange={(e) => setBannerLink(e.target.value)}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <FormatAlignRightIcon sx={{ color: \"#ffa05c\" }} /> {/* تغییر رنگ آیکون */}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"banner-Image\"\r\n              label=\"تصویر بنر\"\r\n              type=\"file\"\r\n              onChange={(e) => setBannerImage(e.target.files[0])}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <CollectionsIcon sx={{ color: \"#ffa05c\" }} /> {/* تغییر رنگ آیکون */}\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              fullWidth\r\n            />\r\n            {error && (\r\n              <Typography variant=\"body2\" sx={{ color: \"red\" }}>\r\n                {error}\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, { useState } from \"react\";\r\nimport { Box, Tabs, Tab } from \"@mui/material\";\r\nimport Swipers from \"../../../components/Swiper/Swipers\";\r\nimport { AddAdmin } from \"./AddAdmin\";\r\nimport { AddProduct } from \"./AddProduct\";\r\nimport { AddCategory } from \"./AddCategory\";\r\nimport { AddSubCategory } from \"./AddSubCategory\";\r\nimport { AddBanner } from \"./AddBanner\";\r\n\r\nexport default function ManagementPage() {\r\n  const [activeTab, setActiveTab] = useState(\"admin\");\r\n\r\n  const handleChangeTab = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ borderRadius: \"8px\",maxWidth:\"800px\" }}>\r\n      <Swipers\r\n        children={\r\n          <Tabs\r\n            value={activeTab}\r\n            onChange={handleChangeTab}\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            sx={{\r\n              \"& .MuiTab-root\": {\r\n                color: \"#ffa05c\",\r\n                \"&.Mui-selected\": {\r\n                  color: \"#e68a4a\",\r\n                  fontWeight: \"bold\",\r\n                },\r\n              },\r\n              \"& .MuiTabs-indicator\": {\r\n                backgroundColor: \"#ffa05c\",\r\n              },\r\n            }}\r\n          >\r\n            <Tab value=\"admin\" label=\"👤 مدیریت ادمین\" />\r\n            <Tab value=\"product\" label=\"🛒 افزودن محصول\" />\r\n            <Tab value=\"category\" label=\"📂 افزودن دسته‌بندی\" />\r\n            <Tab value=\"SubCategory\" label=\"📂 افزودن ساب کتگوری\" />\r\n            <Tab value=\"banner\" label=\"📢 افزودن بنر\" />\r\n          </Tabs>\r\n        }\r\n      />\r\n      <Box sx={{ marginTop: \"16px\" }}>\r\n        {activeTab === \"admin\" && <AddAdmin />}\r\n        {activeTab === \"product\" && <AddProduct />}\r\n        {activeTab === \"category\" && <AddCategory />}\r\n        {activeTab === \"SubCategory\" && <AddSubCategory />}\r\n        {activeTab === \"banner\" && <AddBanner />}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}","import React, { useRef } from 'react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/css';\r\nimport 'swiper/css/effect-coverflow';\r\nimport { EffectCoverflow, FreeMode, Scrollbar, Mousewheel } from 'swiper/modules';\r\n\r\nfunction Swipers({ children, className, direction = \"horizontal\" }) {\r\n  const swiperRef = useRef(null);\r\n\r\n  // استایل‌های سه بعدی\r\n  const swiperStyle = {\r\n    '--swiper-perspective': '1000px', // تنظیم پرسپکتیو\r\n    '--swiper-3d-rotate': '10deg', // تنظیم زاویه چرخش\r\n  };\r\n\r\n  return (\r\n    <Swiper\r\n      ref={swiperRef}\r\n      direction={direction}\r\n      effect={'coverflow'} // استفاده از افکت coverflow برای جلوه سه بعدی\r\n      coverflowEffect={{\r\n        rotate: 20, // چرخش اسلایدها\r\n        stretch: 5, // کشیدگی\r\n        depth: 100, // عمق سه بعدی\r\n        modifier: 1, // تعدیل کننده\r\n        slideShadows: false, // نمایش سایه\r\n      }}\r\n      slidesPerView={'auto'}\r\n      freeMode={true}\r\n      scrollbar={{\r\n        hide: true,\r\n        draggable: true,\r\n      }}\r\n      mousewheel={{\r\n        forceToAxis: true,\r\n        sensitivity: 100,\r\n      }}\r\n      modules={[EffectCoverflow, FreeMode, Scrollbar, Mousewheel]}\r\n      className={`mySwiper ${className || ''}`}\r\n      style={swiperStyle}\r\n      spaceBetween={direction === 'horizontal' ? 40 : 16} // افزایش فاصله برای جلوه بهتر\r\n      grabCursor={true} // تغییر شکل کرسر هنگام hover\r\n    >\r\n      {React.Children.map(children, (child, index) => (\r\n        <SwiperSlide \r\n          key={index} \r\n          style={{ \r\n            width: direction === 'horizontal' ? 'auto' : '100%',\r\n            height: direction === 'vertical' ? 'auto' : '100%',\r\n            transformStyle: 'preserve-3d', // فعال کردن transformهای سه بعدی\r\n            backfaceVisibility: 'hidden', // مخفی کردن پشت اسلایدها\r\n          }}\r\n        >\r\n          <div style={{\r\n            transform: 'translateZ(10px)', // ایجاد عمق\r\n            height: '100%',\r\n          }}>\r\n            {child}\r\n          </div>\r\n        </SwiperSlide>\r\n      ))}\r\n    </Swiper>\r\n  );\r\n}\r\n\r\nexport default React.memo(Swipers);"],"names":["addAdmin","async","api","post","adminData","data","error","console","AddAdmin","adminName","setAdminName","useState","adminEmail","setAdminEmail","adminRole","setAdminRole","loading","setLoading","setError","handleAddAdmin","e","preventDefault","name","email","role","alert","resetForm","setters","forEach","setter","_jsxs","Card","sx","background","borderRadius","children","_jsx","CardHeader","title","Typography","variant","component","color","fontWeight","action","Button","backgroundColor","onClick","disabled","CircularProgress","size","CardContent","onSubmit","style","display","flexDirection","gap","TextField","id","label","placeholder","value","onChange","target","required","InputProps","startAdornment","InputAdornment","position","DriveFileRenameOutlineIcon","fullWidth","borderColor","type","AlternateEmailIcon","KeyboardCommandKeyIcon","textAlign","AddProduct","productName","setProductName","productPrice","setProductPrice","productStock","setProductStock","productImage","setProductImage","productCategory","setProductCategory","productSubCategory","setProductSubCategory","productDescription","setProductDescription","categories","setCategories","subCategories","setSubCategories","token","Cookies","get","useEffect","categoryData","getCategories","selectedCategory","find","cat","_id","handleAddProduct","formData","FormData","append","addProduct","encType","RequestQuoteIcon","ShowChartIcon","FormControl","InputLabel","Select","labelId","MenuItem","map","category","subCategory","FormatAlignRightIcon","files","CollectionsIcon","AddCategory","categoryName","setCategoryName","categoryDescription","setCategoryDescription","categoryImage","setCategoryImage","handleAddCategory","addCategory","AddSubCategory","setName","description","setDescription","setSelectedCategory","handleAddSubCategory","log","addSubCategory","AddBanner","bannerTitle","setBannerTitle","bannerLink","setBannerLink","bannerImage","setBannerImage","handleAddBanner","addBanner","ManagementPage","activeTab","setActiveTab","Box","maxWidth","Swipers","Tabs","handleChangeTab","event","newValue","scrollButtons","Tab","marginTop","_ref","className","direction","swiperRef","useRef","Swiper","ref","effect","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","slidesPerView","freeMode","scrollbar","hide","draggable","mousewheel","forceToAxis","sensitivity","modules","EffectCoverflow","FreeMode","Scrollbar","Mousewheel","concat","spaceBetween","grabCursor","React","child","index","SwiperSlide","width","height","transformStyle","backfaceVisibility","transform"],"sourceRoot":""}